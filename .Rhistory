y<-logisticFitPred(belarus$time, belarus$perc,14)
y
y<-logisticFitPred(belarus$time, belarus$perc,30)
y
y<-logisticFitPred(belarus$time, belarus$perc,29)
y
world$mobile.users[world$Country == "Brazil" & world$year == 2000]
world$year[world$Country == "Brazil" & world$mobile.users >= 100000000]
brazil <- world[world$Country == "Brazil" & world$year >= 1995,]
brazil
brazil$time <- brazil$year - 1995
expFit(brazil$time, brazil$mobile.users)
logisticFit(brazil$time, brazil$mobile.users)
linFit(brazil$time, brazil$mobile.users)
y<-logisticFitPred(brazil$time, brazil$mobile.users,30)
y
a<-c(1,2,3,4,5,6,7,8,9,10)
b<-c(73,105,137,257,367,658,898,1085,1490,1893)
logisticFit(a,b)
y<-logisticFitPred(a,b,14)
y
y<-logisticFitPred(a,b,15)
y
a<-(1,2)
a<-c(1,2)
b<-c(15,45)
expFit(a,b)
a<-c(2,42)
a<-c(2,4)
expFit(a,b)
a<-c(1,34)
a<-c(1,3)
expFit(a,b)
a<-c(1996,1998)
expFit(a,b)
a <- a - 1995
a
expFit(a,b)
expFitPred(a,b,0)
y<-expFitPred(a,b,0)
y
b<-c(25,45)
expFit(a,b)
y<-expFitPred(a,b,0)
y
a
y<-expFitPred(a,b,7)
y
y<-expFitPred(a,b,30)
y
y<-expFitPred(a,b,10)
y
y<-expFitPred(a,b,9)
y
y<-expFitPred(a,b,10)
y<-expFitPred(a,b,11)
y
y<-expFitPred(a,b,10)
y
dt(1.38,INF)
require(ggplot2)
require(ggplot)
require(ggplot2)
require(plyr)
require(reshape2)
require(sjPlot)
require(Hmisc)
require(GGally)
require(stats)
require(xlsx)
require(lme4)
require(coefplot)
require(ggplot2)
require(plyr)
require(reshape2)
require(sjPlot)
require(Hmisc)
require(GGally)
require(stats)
require(xlsx)
require(lme4)
require(coefplot)
dt(1.38,INF)
dt(1.38,Inf)
a<-c(180,200,190,230,80,160,170,130,140,220,110,120,100,170)
mean(a)
48.5/sart(14)
48.5/sqrt(14)
48.5/sqrt(14)*1.96
157.14+25.41
157.14-25.41
library(SDSFoundations)
survey <- read.csv("J:/GongTao/Academic Activities/Courses/Online courses/edX/Foundations of Data Analysis/Week7/lab/StudentSurvey.csv")
View(survey)
length(survey)
survey
len(survey)
nrow(survey)
a<-survey[survey$happy<40,]
a
hist(survey$name_letters)
fivenum(survey$name_letters)
mean(survey$name_letters)
sd(survey$name_letters)
xbar5 <-rep(NA, 1000)
for (i in 1:1000)
{x <-sample(survey$name_letters, size =5)
xbar5[i] <-  mean(x)}
hist(xbar5,xlim=c(2,10))
mean(xbar5)
sd(xbar5)
sd(survey$name_letters)/sqrt(5)
xbar15 <-rep(NA, 1000)
for (i in 1:1000)
{x <-sample(survey$name_letters, size =15)
xbar15[i] <- mean(x)}
hist(xbar15,xlim=c(2,10))
mean(xbar15)
sd(xbar15)
sd(survey$name_letters)/sqrt(15)
xbar25 <-rep(NA, 1000)
for (i in 1:1000)
{x <-sample(survey$name_letters, size =25)
xbar25[i] <- mean(x)}
hist(xbar25,xlim=c(2,10))
mean(xbar25)
sd(xbar25)
sd(survey$name_letters)/sqrt(25)
mean(xbar5)
mean(xbar15)
mean(xbar10)
mean(xbar25)
sd(xbar5)
sd(xbar15)
sd(xbar25)
mean(mean(xbar5), mean(xbar15), mean(xbar25))
mean(xbar5)+ mean(xbar15)+ mean(xbar25)
17.93027/3
17.93027/3.0
mean(xbar5)
hist(survey$happy)
mean(survey$happy)
sd(survey$happy)
xbar5 <-rep(NA, 1000)
for (i in 1:1000)
+ {x <-sample(survey$happy, size =5)
+  xbar15[i] <- mean(x)}
for (i in 1:1000)
+     + {x <-sample(survey$happy, size =5)
+        +  xbar5[i] <- mean(x)}
for (i in 1:1000)
{x <-sample(survey$happy, size =5)
xbar5[i] <- mean(x)}
xbar15 <- rep(NA,1000)
for (i in 1:1000)
{x <-sample(survey$happy, size =15)
xbar15[i] <- mean(x)}
xbar25<-rep(NA,1000)
for (i in 1:1000)
{x <-sample(survey$happy, size =25)
xbar25[i] <- mean(x)}
sd(xbar5)
mean(xbar5)
mean(xbar15)
mean(xbar25)
mean(1,2,3)
mean(c(1,2,3)
)
mean(c(mean(xbar5),mean(xbar15), mean(xbar25))
)
sd(survey$happy)/sqrt(5)
sd(xbar5)
sd(survey$happy)/sqrt(15)
sd(survey$happy)/sqrt(25)
hist(survey$austin)
mean(survey$austin)
sd(survey$austin)
xbar10 <- rep(NA,1000)for (i in 1:1000)
+ {x <-sample(survey$happy, size =15)
+ xbar15[i] <- mean(x)}
for (i in 1:1000){x <-sample(survey$austin, size =10)
xbar10[i] <- mean(x)}
xbar10<-rep(NA,1000)
for(i in 1:1000){x<-sample(survey$austin, size=10)}
for(i in 1:1000){x<-sample(survey$austin, size=10) + xbar10[i]<-mean(x)}
for(i in 1:1000){x<-sample(survey$austin, size=10) xbar10[i]<-mean(x)}
for(i in 1:1000){x<-sample(survey$austin, size=10) xbar10[i]<-mean(x)}
for(i in 1:1000){x<-sample(survey$austin, size=10) xbar10[i]<-mean(x)}
for(i in 1:1000)
{ x<-sample(survey$austin, size=10)
xbar10[i]<-mean(x)}
mean(xbar10)
sd(xbar10)
1.51/sqrt(10)
hist(xbar10)
(3.2-3.08)/0.4
2*pnorm(0.3)
pnorm(0.3)
0.4/sqrt(25)
(2.9-3.08)/0.4
pnorm(-0.45)
1-pnorm(-0.45)
1-pnorm(-0.45)-(1-pnor(0.3))
1-pnorm(-0.45)-(1-pnorm(0.3))
1-pnorm(-0.45)-pnorm(0.3)
1-pnorm(-0.45)-(1-pnorm(0.3))
pnorm(-0.45)-pnorm(0.3)
pnorm(-0.45)+pnorm(0.3)
pnorm(-0.45)+(1-pnorm(0.3))
11/sqrt(23)
(35.1-28)/(11/sqrt(23))
pnorm(3.1)
1-pnorm(3.1)
1.5/sqrt(15)
1.96*0.387
1.96*1.5/sqrt(15)
471.46-0.759
471.46+0.759
qf(.95, df1=24, df2=3)
19*24
3*19
117-57
60/24
19/2.5
60/25
19/2.4
60/96
19/0.625
1-(1-0.05)^6
pt(3.73, df = F)
qt(3.73, df = F)
dt(3.73, df = F)
dt(3.73, df = Nan)
dt(3.73)
help dt?
help dt
help(dt)
dt(3.73, df=INF)
pt(3.73, df=INF)
pt(3.73, df=1000)
dt(3.73, df=1000)
dt(2.98, df=1000)
help dt?
help(dt)
dt(2.98, INF)
require(ggplot2)
require(plyr)
require(reshape2)
require(sjPlot)
require(Hmisc)
require(GGally)
require(stats)
require(xlsx)
dt(2.98, INF)
dt(2.98, Inf)
dt(3.73, Inf)
dt(-2.72, Inf)
dt(-3.36, Inf)
dt(-4.54, Inf)
dt(3.64, Inf)
dt(-2.34, Inf)
require(ggplot2)
dt(-2.29,Inf)
citation("lme4")
citation("glme")
list.of.packages <- c("dplyr", "plyr", "data.table", "MissForest", "MissMDA",
"Outliers", "EVIR", "Features", "RRF", "FactorMiner", "CCP",
"ggplot2", "googkleVis", "Rcharts", "car", "randomforest",
"Rminer", "CoreLearn", "caret", "BigRF", "CBA",
"RankCluster", "forecat", "LTSA", "survival", "Basta",
"LSMean", "Comparison", "RegTest", "ACD", "BinomTools",
"DAIM", "ClustEval", "SigClust", "PROC", "TimeROC", "Rcpp",
"parallel", "xml", "httr", "rjson", "jasonlite", "shiny",
"Rmarkdown", "tm", "OpenNLP", "sqldf", "RODBC", "rmonogodb")
new.packages <- list.of.packages[!(list.of.packages
%in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
lapply(list.of.packages,function(x){library(x,character.only=TRUE)})
cite(psych)
qt(14,mean=12.30,sd=3.11)
qt(14,12.30,3.11)
pt(14,12.30,3.11)
help(pt)
pnorm(14,12.30,3.11)
IQR(c(4, 4, 2, 9, 7, 9, 6, 4, 7, 8))
a<-c(1,6,7)
b<-c(23,48,41)
pearson(a,b)
cor(a,b)
sd(c(156,184,172,165))
help(pbinom)
c<-c(25
22
25
24
23
23
26
22
25
23
22
23
24
24
24
23
25
25
22
23
24
22
24
23
24
22
24
25
23
25
26
)
c
29/sqrt(365)
42/(42+43)
p<-42/(42+43)
aa <- sqrt(p*(1-p)*(1/42+1/43))
aa
aaa <- 30/42-8/43
aaa/aa
z<-aaa/aa
2*pnorm(-abs(z))
aaa<-12/47-30/38
aaa
z<-aaa/aa
z
aa <- sqrt(p*(1-p)*(1/47+1/38))
aa
z<-aaa/aa
z
34/16
sqrt(10.3/23+4.2/30)
(15-26)/sqrt(10.3/23+4.2/30)
sqrt(10.3^2/23+4.2^2/30)
1.96*4.47
1.96*4.47-40
1.96*4.47+40
0.4/(2.3/sqrt(5))
2/(2.3/sqrt(5))
0.4/(2.3/sqrt(5))
29/sqrt(168+197)
p
p<-42/(42+43)
p
a<-sqrt(p*(1-p)*(1/42+1/43))
a
aa<-30/38-12/47
aa
aa/a
require(ggplot2)
require(plyr)
require(reshape2)
require(sjPlot)
require(Hmisc)
require(GGally)
require(stats)
require(xlsx)
require(lme4)
require(coefplot)
require(broom)
require(gam)
require(MuMIn)
require(influence.ME)
library(stringr)
library(reshape2)
library(tidyr)
library(ggplot2)
library(hexbin)
library(plyr)
flist <- dir(".", pattern="^output.txt$", recursive=TRUE)
readOutput <- function(f){
print(f)
prs <- str_split(f, "/", simplify=TRUE)
hlsize <- as.integer(str_extract(str_split(prs[2], "L", simplify=TRUE)[1], "[0-9]+"))
lrnrate <- as.numeric(str_split(prs[2], "L", simplify=TRUE)[2])
run <- as.integer(prs[3])
retval <- read.delim(f)
retval <- data.frame(hlsize, lrnrate, run,retval)
}
trsummary <- ldply(flist, readOutput)
names(trsummary) <- str_to_lower(names(trsummary))
trsummary
flist
flist <- dir(".", pattern="^output.txt$", recursive=TRUE)
library(stringr)
install.packages(c('stringr','reshape2','tidyr','ggplot2','hexbin','plyr')
)
install.packages(c('sjPlot','Hmisc','GGally','stats','xlsx','lme4','coefplot','broom','gam','MuMIn','influence.ME'))
install.packages(c("sjPlot", "Hmisc", "GGally", "stats", "xlsx",
'lme4')
)
install.packages(c("sjPlot", "Hmisc", "GGally", "stats", "xlsx",
))
require(sjPlot)
install.packages('sjPlot')
install.packages('stats')
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("stats")
install.packages("GGally")
install.packages("lme4")
install.packages("xlsx")
install.packages("coefplot")
install.packages("broom")
install.packages("gam")
install.packages("MuMIn")
install.packages("influence.ME")
install.packages("stats")
library(text2vec)
library(rmmseg4j)
install.packages("rmmseg4j", repos="http://R-Forge.R-project.org", type="source")
library(rmmseg4j)
library(text2vec)
library(rmmseg4j)
install.packages("rmmseg4j", repos="http://R-Forge.R-project.org", type="source")
install.packages("rJava")
library("rJava")
setwd("J:/GongTao/Academic Activities/Publications/Linguistics/Journals/English/Scientific Studies of Reading-SCI/SentReading/code_data")
require(ggplot2)
require(plyr)
require(reshape2)
require(sjPlot)
require(Hmisc)
require(GGally)
require(stats)
require(xlsx)
require(lme4)
require(coefplot)
require(broom)
require(gam)
require(MuMIn)
require(influence.ME)
# load data
D2 <- read.csv("./data/res_F/ET_F_ana2.csv", na.strings = "NA")
D2$itemF <- factor(D2$item) # probably won't matter if item is treated as numeric or categorical, but
D2temp <- D2; levels(D2temp$subj) <- c(1:44) # for testing individual influence
lmer_fpregres_in_c_noRC <- glmer(fpregres_in ~ oral.comp_bct + decod.comp_bct + printexp.comp_bct + gort.wpm.st + sspan.corr.st
+ region_C + std_res_f_coca_log + reglen_C + std_res_prevf_coca_log + prevwlen_C + std_res_nextf_coca_log + nextwlen_C
+ oral.comp_bct:region_C + decod.comp_bct:region_C + printexp.comp_bct:region_C + gort.wpm.st:region_C + sspan.corr.st:region_C
+ oral.comp_bct:std_res_f_coca_log + decod.comp_bct:std_res_f_coca_log + printexp.comp_bct:std_res_f_coca_log + gort.wpm.st:std_res_f_coca_log + sspan.corr.st:std_res_f_coca_log
+ oral.comp_bct:reglen_C + decod.comp_bct:reglen_C + printexp.comp_bct:reglen_C + gort.wpm.st:reglen_C + sspan.corr.st:reglen_C
+ (1|itemF/word) + (1|subj), data = D2temp, family = binomial(link='logit'), control = glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e6)), nAGQ = 1)
fpregres_in_p_DF <- data.frame(matrix(NA, nrow=length(subjSet)+1, ncol=length(resName)+1)); names(fpregres_in_p_DF) <- c('subj', resName)
fpregres_in_p_DF$subj[1] <- 0; fpregres_in_p_DF[1,resName] <- summary(lmer_fpregres_in_c_noRC)$coefficients[resName, 4]
for(i in 1:length(subjSet)){
cat("Remove subject ", i, "\n");
lmer_fpregres_in_temp <- glmer(fpregres_in ~ oral.comp_bct + decod.comp_bct + readcomp.comp_bct + printexp.comp_bct + gort.wpm.st + sspan.corr.st
+ region_C + std_res_f_coca_log + reglen_C + std_res_prevf_coca_log + prevwlen_C + std_res_nextf_coca_log + nextwlen_C
+ oral.comp_bct:region_C + decod.comp_bct:region_C + readcomp.comp_bct:region_C + printexp.comp_bct:region_C + gort.wpm.st:region_C + sspan.corr.st:region_C
+ oral.comp_bct:std_res_f_coca_log + decod.comp_bct:std_res_f_coca_log + readcomp.comp_bct:std_res_f_coca_log + printexp.comp_bct:std_res_f_coca_log + gort.wpm.st:std_res_f_coca_log + sspan.corr.st:std_res_f_coca_log
+ oral.comp_bct:reglen_C + decod.comp_bct:reglen_C + readcomp.comp_bct:reglen_C + printexp.comp_bct:reglen_C + gort.wpm.st:reglen_C + sspan.corr.st:reglen_C
+ (1|itemF/word) + (1|subj), data = D2temp[D2temp$subj %in% subjSet[-c(i)],], family = binomial(link='logit'), control = glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e7)), nAGQ = 1)
fpregres_in_p_DF$subj[i+1] <- subjSet[i]; fpregres_in_p_DF[i+1, resName] <- summary(lmer_fpregres_in_temp)$coefficients[resName, 4]
}
write.csv(fpregres_in_p_DF, "./data/Ind/fpregres_in_p_DF.csv", row.names = FALSE)
p_thres <- 0.05/31
fpregres_in_per_DF <- data.frame(matrix(NA,nrow=1, ncol=length(resName))); names(fpregres_in_per_DF) <- resName
for(i in 1:length(resName)){
fpregres_in_per_DF[1, resName[i]] <- sum(fpregres_in_p_DF[2:nrow(fpregres_in_p_DF),resName[i]]<=p_thres)/(nrow(fpregres_in_p_DF)-1)
}
fpregres_in_per_DF
subjSet <- unique(D2temp$subj)
paraMain <- c('region_C', 'reglen_C', 'std_res_f_coca_log', 'std_res_prevf_coca_log', 'prevwlen_C', 'std_res_nextf_coca_log')
paraInt <- c('sspan.corr.st:region_C', 'sspan.corr.st:reglen_C')
resName <- c(paraMain, paraInt)
fpregres_in_p_DF <- data.frame(matrix(NA, nrow=length(subjSet)+1, ncol=length(resName)+1)); names(fpregres_in_p_DF) <- c('subj', resName)
fpregres_in_p_DF$subj[1] <- 0; fpregres_in_p_DF[1,resName] <- summary(lmer_fpregres_in_c_noRC)$coefficients[resName, 4]
for(i in 1:length(subjSet)){
cat("Remove subject ", i, "\n");
lmer_fpregres_in_temp <- glmer(fpregres_in ~ oral.comp_bct + decod.comp_bct + readcomp.comp_bct + printexp.comp_bct + gort.wpm.st + sspan.corr.st
+ region_C + std_res_f_coca_log + reglen_C + std_res_prevf_coca_log + prevwlen_C + std_res_nextf_coca_log + nextwlen_C
+ oral.comp_bct:region_C + decod.comp_bct:region_C + readcomp.comp_bct:region_C + printexp.comp_bct:region_C + gort.wpm.st:region_C + sspan.corr.st:region_C
+ oral.comp_bct:std_res_f_coca_log + decod.comp_bct:std_res_f_coca_log + readcomp.comp_bct:std_res_f_coca_log + printexp.comp_bct:std_res_f_coca_log + gort.wpm.st:std_res_f_coca_log + sspan.corr.st:std_res_f_coca_log
+ oral.comp_bct:reglen_C + decod.comp_bct:reglen_C + readcomp.comp_bct:reglen_C + printexp.comp_bct:reglen_C + gort.wpm.st:reglen_C + sspan.corr.st:reglen_C
+ (1|itemF/word) + (1|subj), data = D2temp[D2temp$subj %in% subjSet[-c(i)],], family = binomial(link='logit'), control = glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e7)), nAGQ = 1)
fpregres_in_p_DF$subj[i+1] <- subjSet[i]; fpregres_in_p_DF[i+1, resName] <- summary(lmer_fpregres_in_temp)$coefficients[resName, 4]
}
subjSet <- unique(D2temp$subj)
paraMain <- c('region_C', 'reglen_C', 'std_res_f_coca_log', 'std_res_prevf_coca_log', 'prevwlen_C', 'std_res_nextf_coca_log')
paraInt <- c('sspan.corr.st:region_C', 'sspan.corr.st:reglen_C')
resName <- c(paraMain, paraInt)
fpregres_in_p_DF <- data.frame(matrix(NA, nrow=length(subjSet)+1, ncol=length(resName)+1)); names(fpregres_in_p_DF) <- c('subj', resName)
fpregres_in_p_DF$subj[1] <- 0; fpregres_in_p_DF[1,resName] <- summary(lmer_fpregres_in_c_noRC)$coefficients[resName, 4]
for(i in 1:length(subjSet)){
cat("Remove subject ", i, "\n");
lmer_fpregres_in_temp <- glmer(fpregres_in ~ oral.comp_bct + decod.comp_bct + printexp.comp_bct + gort.wpm.st + sspan.corr.st
+ region_C + std_res_f_coca_log + reglen_C + std_res_prevf_coca_log + prevwlen_C + std_res_nextf_coca_log + nextwlen_C
+ oral.comp_bct:region_C + decod.comp_bct:region_C +  printexp.comp_bct:region_C + gort.wpm.st:region_C + sspan.corr.st:region_C
+ oral.comp_bct:std_res_f_coca_log + decod.comp_bct:std_res_f_coca_log + printexp.comp_bct:std_res_f_coca_log + gort.wpm.st:std_res_f_coca_log + sspan.corr.st:std_res_f_coca_log
+ oral.comp_bct:reglen_C + decod.comp_bct:reglen_C + printexp.comp_bct:reglen_C + gort.wpm.st:reglen_C + sspan.corr.st:reglen_C
+ (1|itemF/word) + (1|subj), data = D2temp[D2temp$subj %in% subjSet[-c(i)],], family = binomial(link='logit'), control = glmerControl(optimizer = "bobyqa", optCtrl=list(maxfun=1e7)), nAGQ = 1)
fpregres_in_p_DF$subj[i+1] <- subjSet[i]; fpregres_in_p_DF[i+1, resName] <- summary(lmer_fpregres_in_temp)$coefficients[resName, 4]
}
write.csv(fpregres_in_p_DF, "./data/Ind/fpregres_in_p_DF.csv", row.names = FALSE)
p_thres <- 0.05/27
fpregres_in_per_DF <- data.frame(matrix(NA,nrow=1, ncol=length(resName))); names(fpregres_in_per_DF) <- resName
for(i in 1:length(resName)){
fpregres_in_per_DF[1, resName[i]] <- sum(fpregres_in_p_DF[2:nrow(fpregres_in_p_DF),resName[i]]<=p_thres)/(nrow(fpregres_in_p_DF)-1)
}
fpregres_in_per_DF
